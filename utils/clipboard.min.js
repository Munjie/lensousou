var t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
    return typeof t;
} : function(t) {
    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
};

!function(e) {
    if ("object" == ("undefined" == typeof exports ? "undefined" : t(exports)) && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).Clipboard = e();
    }
}(function() {
    return function t(e, n, o) {
        function i(a, c) {
            if (!n[a]) {
                if (!e[a]) {
                    var u = "function" == typeof require && require;
                    if (!c && u) return u(a, !0);
                    if (r) return r(a, !0);
                    var l = new Error("Cannot find module '" + a + "'");
                    throw l.code = "MODULE_NOT_FOUND", l;
                }
                var s = n[a] = {
                    exports: {}
                };
                e[a][0].call(s.exports, function(t) {
                    var n = e[a][1][t];
                    return i(n || t);
                }, s, s.exports, t, e, n, o);
            }
            return n[a].exports;
        }
        for (var r = "function" == typeof require && require, a = 0; a < o.length; a++) i(o[a]);
        return i;
    }({
        1: [ function(t, e, n) {
            var o = 9;
            if ("undefined" != typeof Element && !Element.prototype.matches) {
                var i = Element.prototype;
                i.matches = i.matchesSelector || i.mozMatchesSelector || i.msMatchesSelector || i.oMatchesSelector || i.webkitMatchesSelector;
            }
            e.exports = function(t, e) {
                for (;t && t.nodeType !== o; ) {
                    if (t.matches(e)) return t;
                    t = t.parentNode;
                }
            };
        }, {} ],
        2: [ function(t, e, n) {
            function o(t, e, n, o) {
                return function(n) {
                    n.delegateTarget = i(n.target, e), n.delegateTarget && o.call(t, n);
                };
            }
            var i = t("./closest");
            e.exports = function(t, e, n, i, r) {
                var a = o.apply(this, arguments);
                return t.addEventListener(n, a, r), {
                    destroy: function() {
                        t.removeEventListener(n, a, r);
                    }
                };
            };
        }, {
            "./closest": 1
        } ],
        3: [ function(t, e, n) {
            n.node = function(t) {
                return void 0 !== t && t instanceof HTMLElement && 1 === t.nodeType;
            }, n.nodeList = function(t) {
                var e = Object.prototype.toString.call(t);
                return void 0 !== t && ("[object NodeList]" === e || "[object HTMLCollection]" === e) && "length" in t && (0 === t.length || n.node(t[0]));
            }, n.string = function(t) {
                return "string" == typeof t || t instanceof String;
            }, n.fn = function(t) {
                return "[object Function]" === Object.prototype.toString.call(t);
            };
        }, {} ],
        4: [ function(t, e, n) {
            function o(t, e, n) {
                return t.addEventListener(e, n), {
                    destroy: function() {
                        t.removeEventListener(e, n);
                    }
                };
            }
            function i(t, e, n) {
                return Array.prototype.forEach.call(t, function(t) {
                    t.addEventListener(e, n);
                }), {
                    destroy: function() {
                        Array.prototype.forEach.call(t, function(t) {
                            t.removeEventListener(e, n);
                        });
                    }
                };
            }
            function r(t, e, n) {
                return c(document.body, t, e, n);
            }
            var a = t("./is"), c = t("delegate");
            e.exports = function(t, e, n) {
                if (!t && !e && !n) throw new Error("Missing required arguments");
                if (!a.string(e)) throw new TypeError("Second argument must be a String");
                if (!a.fn(n)) throw new TypeError("Third argument must be a Function");
                if (a.node(t)) return o(t, e, n);
                if (a.nodeList(t)) return i(t, e, n);
                if (a.string(t)) return r(t, e, n);
                throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList");
            };
        }, {
            "./is": 3,
            delegate: 2
        } ],
        5: [ function(t, e, n) {
            e.exports = function(t) {
                var e;
                if ("SELECT" === t.nodeName) t.focus(), e = t.value; else if ("INPUT" === t.nodeName || "TEXTAREA" === t.nodeName) {
                    var n = t.hasAttribute("readonly");
                    n || t.setAttribute("readonly", ""), t.select(), t.setSelectionRange(0, t.value.length), 
                    n || t.removeAttribute("readonly"), e = t.value;
                } else {
                    t.hasAttribute("contenteditable") && t.focus();
                    var o = window.getSelection(), i = document.createRange();
                    i.selectNodeContents(t), o.removeAllRanges(), o.addRange(i), e = o.toString();
                }
                return e;
            };
        }, {} ],
        6: [ function(t, e, n) {
            function o() {}
            o.prototype = {
                on: function(t, e, n) {
                    var o = this.e || (this.e = {});
                    return (o[t] || (o[t] = [])).push({
                        fn: e,
                        ctx: n
                    }), this;
                },
                once: function(t, e, n) {
                    function o() {
                        i.off(t, o), e.apply(n, arguments);
                    }
                    var i = this;
                    return o._ = e, this.on(t, o, n);
                },
                emit: function(t) {
                    var e = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[t] || []).slice(), o = 0, i = n.length;
                    for (o; o < i; o++) n[o].fn.apply(n[o].ctx, e);
                    return this;
                },
                off: function(t, e) {
                    var n = this.e || (this.e = {}), o = n[t], i = [];
                    if (o && e) for (var r = 0, a = o.length; r < a; r++) o[r].fn !== e && o[r].fn._ !== e && i.push(o[r]);
                    return i.length ? n[t] = i : delete n[t], this;
                }
            }, e.exports = o;
        }, {} ],
        7: [ function(e, n, o) {
            !function(t, i) {
                if (void 0 !== o) i(n, e("select")); else {
                    var r = {
                        exports: {}
                    };
                    i(r, t.select), t.clipboardAction = r.exports;
                }
            }(this, function(e, n) {
                function o(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                }
                var i = function(t) {
                    return t && t.__esModule ? t : {
                        default: t
                    };
                }(n), r = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(e) {
                    return void 0 === e ? "undefined" : t(e);
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : void 0 === e ? "undefined" : t(e);
                }, a = function() {
                    function t(t, e) {
                        for (var n = 0; n < e.length; n++) {
                            var o = e[n];
                            o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), 
                            Object.defineProperty(t, o.key, o);
                        }
                    }
                    return function(e, n, o) {
                        return n && t(e.prototype, n), o && t(e, o), e;
                    };
                }(), c = function() {
                    function t(e) {
                        o(this, t), this.resolveOptions(e), this.initSelection();
                    }
                    return a(t, [ {
                        key: "resolveOptions",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            this.action = t.action, this.emitter = t.emitter, this.target = t.target, this.text = t.text, 
                            this.trigger = t.trigger, this.selectedText = "";
                        }
                    }, {
                        key: "initSelection",
                        value: function() {
                            this.text ? this.selectFake() : this.target && this.selectTarget();
                        }
                    }, {
                        key: "selectFake",
                        value: function() {
                            var t = this, e = "rtl" == document.documentElement.getAttribute("dir");
                            this.removeFake(), this.fakeHandlerCallback = function() {
                                return t.removeFake();
                            }, this.fakeHandler = document.body.addEventListener("click", this.fakeHandlerCallback) || !0, 
                            this.fakeElem = document.createElement("textarea"), this.fakeElem.style.fontSize = "12pt", 
                            this.fakeElem.style.border = "0", this.fakeElem.style.padding = "0", this.fakeElem.style.margin = "0", 
                            this.fakeElem.style.position = "absolute", this.fakeElem.style[e ? "right" : "left"] = "-9999px";
                            var n = window.pageYOffset || document.documentElement.scrollTop;
                            this.fakeElem.style.top = n + "px", this.fakeElem.setAttribute("readonly", ""), 
                            this.fakeElem.value = this.text, document.body.appendChild(this.fakeElem), this.selectedText = (0, 
                            i.default)(this.fakeElem), this.copyText();
                        }
                    }, {
                        key: "removeFake",
                        value: function() {
                            this.fakeHandler && (document.body.removeEventListener("click", this.fakeHandlerCallback), 
                            this.fakeHandler = null, this.fakeHandlerCallback = null), this.fakeElem && (document.body.removeChild(this.fakeElem), 
                            this.fakeElem = null);
                        }
                    }, {
                        key: "selectTarget",
                        value: function() {
                            this.selectedText = (0, i.default)(this.target), this.copyText();
                        }
                    }, {
                        key: "copyText",
                        value: function() {
                            var t = void 0;
                            try {
                                t = document.execCommand(this.action);
                            } catch (e) {
                                t = !1;
                            }
                            this.handleResult(t);
                        }
                    }, {
                        key: "handleResult",
                        value: function(t) {
                            this.emitter.emit(t ? "success" : "error", {
                                action: this.action,
                                text: this.selectedText,
                                trigger: this.trigger,
                                clearSelection: this.clearSelection.bind(this)
                            });
                        }
                    }, {
                        key: "clearSelection",
                        value: function() {
                            this.target && this.target.blur(), window.getSelection().removeAllRanges();
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            this.removeFake();
                        }
                    }, {
                        key: "action",
                        set: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "copy";
                            if (this._action = t, "copy" !== this._action && "cut" !== this._action) throw new Error('Invalid "action" value, use either "copy" or "cut"');
                        },
                        get: function() {
                            return this._action;
                        }
                    }, {
                        key: "target",
                        set: function(t) {
                            if (void 0 !== t) {
                                if (!t || "object" !== (void 0 === t ? "undefined" : r(t)) || 1 !== t.nodeType) throw new Error('Invalid "target" value, use a valid Element');
                                if ("copy" === this.action && t.hasAttribute("disabled")) throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                                if ("cut" === this.action && (t.hasAttribute("readonly") || t.hasAttribute("disabled"))) throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
                                this._target = t;
                            }
                        },
                        get: function() {
                            return this._target;
                        }
                    } ]), t;
                }();
                e.exports = c;
            });
        }, {
            select: 5
        } ],
        8: [ function(e, n, o) {
            !function(t, i) {
                if (void 0 !== o) i(n, e("./clipboard-action"), e("tiny-emitter"), e("good-listener")); else {
                    var r = {
                        exports: {}
                    };
                    i(r, t.clipboardAction, t.tinyEmitter, t.goodListener), t.clipboard = r.exports;
                }
            }(this, function(e, n, o, i) {
                function r(t) {
                    return t && t.__esModule ? t : {
                        default: t
                    };
                }
                function a(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
                }
                function c(e, n) {
                    if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !n || "object" != (void 0 === n ? "undefined" : t(n)) && "function" != typeof n ? e : n;
                }
                function u(e, n) {
                    if ("function" != typeof n && null !== n) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === n ? "undefined" : t(n)));
                    e.prototype = Object.create(n && n.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), n && (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : e.__proto__ = n);
                }
                function l(t, e) {
                    var n = "data-clipboard-" + t;
                    if (e.hasAttribute(n)) return e.getAttribute(n);
                }
                var s = r(n), f = r(o), d = r(i), h = function() {
                    function t(t, e) {
                        for (var n = 0; n < e.length; n++) {
                            var o = e[n];
                            o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), 
                            Object.defineProperty(t, o.key, o);
                        }
                    }
                    return function(e, n, o) {
                        return n && t(e.prototype, n), o && t(e, o), e;
                    };
                }(), p = function(t) {
                    function e(t, n) {
                        a(this, e);
                        var o = c(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this));
                        return o.resolveOptions(n), o.listenClick(t), o;
                    }
                    return u(e, f.default), h(e, [ {
                        key: "resolveOptions",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            this.action = "function" == typeof t.action ? t.action : this.defaultAction, this.target = "function" == typeof t.target ? t.target : this.defaultTarget, 
                            this.text = "function" == typeof t.text ? t.text : this.defaultText;
                        }
                    }, {
                        key: "listenClick",
                        value: function(t) {
                            var e = this;
                            this.listener = (0, d.default)(t, "click", function(t) {
                                return e.onClick(t);
                            });
                        }
                    }, {
                        key: "onClick",
                        value: function(t) {
                            var e = t.delegateTarget || t.currentTarget;
                            this.clipboardAction && (this.clipboardAction = null), this.clipboardAction = new s.default({
                                action: this.action(e),
                                target: this.target(e),
                                text: this.text(e),
                                trigger: e,
                                emitter: this
                            });
                        }
                    }, {
                        key: "defaultAction",
                        value: function(t) {
                            return l("action", t);
                        }
                    }, {
                        key: "defaultTarget",
                        value: function(t) {
                            var e = l("target", t);
                            if (e) return document.querySelector(e);
                        }
                    }, {
                        key: "defaultText",
                        value: function(t) {
                            return l("text", t);
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            this.listener.destroy(), this.clipboardAction && (this.clipboardAction.destroy(), 
                            this.clipboardAction = null);
                        }
                    } ], [ {
                        key: "isSupported",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [ "copy", "cut" ], e = "string" == typeof t ? [ t ] : t, n = !!document.queryCommandSupported;
                            return e.forEach(function(t) {
                                n = n && !!document.queryCommandSupported(t);
                            }), n;
                        }
                    } ]), e;
                }();
                e.exports = p;
            });
        }, {
            "./clipboard-action": 7,
            "good-listener": 4,
            "tiny-emitter": 6
        } ]
    }, {}, [ 8 ])(8);
});